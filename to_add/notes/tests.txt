test_helper.rb
  fixtures :all
  def is_logged_in?
  def log_in_as(user, options = {})
  private
    def integration_test?
    
test/fixtures:
users.yml
  michael
  archer
  lana
  mallory
  <% 30.times do |n| %>
    user_<%= n %>:

test/controllers:
account_activations_controller_test.rb
sessions_controller_test.rb
  test "should get new" do
static_pages_controller_test.rb
  test "should get home" do
  test "should get help" do
  test "should get about" do
  test "should get contact" do
users_controller_test.rb
  def setup
  test "should redirect index when not logged in" do
  test "should get new" do
  test "should redirect edit when not logged in" do  
  test "should redirect update when not logged in" do  
  test "should redirect edit when logged in as wrong user" do 
  test "should redirect update when logged in as wrong user" do
  test "should redirect destroy when not logged in" do
  test "should redirect destroy when logged in as a non-admin" do

test/helpers:
sessions_helper_test.rb
  def setup
  test "current_user returns right user when session is nil" do
  test "current_user returns nil when remember digest is wrong" do

test/integration:
password_resets_test.rb
  def setup
  test "password resets" do
    # Invalid email
    # Valid email
    # Password reset form
    # Wrong email
    # Inactive user
    # Right email, wrong token
    # Right email, right token
    # Invalid password & confirmation
    # Blank password & confirmation
    # Valid password & confirmation
site_layout_test.rb
  test "layout links" do
users_edit_test.rb
  def setup
  test "unsuccessful edit" do  
  test "successful edit with friendly forwarding" do
users_index_test.rb
  def setup
  test "index as admin including pagination and delete links" do  
  test "index as non-admin" do
users_login_test.rb
  def setup
  test "login with invalid information" do
  test "login with valid information followed by logout" do
  test "login with remembering" do 
  test "login without remembering" do
users_signup_test.rb
  def setup
  test "invalid signup information" do 
  test "valid signup information" do
  
test/mailers:
  # Preview this email at http://localhost:3000/rails/mailers/user_mailer/account_activation
  def account_activation
  # Preview this email at http://localhost:3000/rails/mailers/user_mailer/password_reset
  def password_reset
previews
user_mailer_test.rb
  # Preview this email at http://localhost:3000/rails/mailers/user_mailer/account_activation
  def account_activation
  # Preview this email at http://localhost:3000/rails/mailers/user_mailer/password_reset
  def password_reset
  
test/mailers/previews:
user_mailer_preview.rb
  # Preview this email at http://localhost:3000/rails/mailers/user_mailer/account_activation
  def account_activation
  # Preview this email at http://localhost:3000/rails/mailers/user_mailer/password_reset
  def password_reset

test/models:
user_test.rb
  def setup
  test "should be valid" do
  test "name should be present" do
  test "email should be present" do
  test "name should not be too long" do
  test "email should not be too long" do
  test "email validation should accept valid addresses" do
  test "email validation should reject invalid addresses" do
  test "email address should be unique" do
  test "password should have a minimum length" do
  test "authenticated? should return false for a user with nil digest" do
